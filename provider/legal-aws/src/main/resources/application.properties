LOG_PREFIX=legal

server.servlet.contextPath=/api/legal/v1/
logging.level.org.springframework.web=${LOG_LEVEL}
server.port=${APPLICATION_PORT}

## AWS Lambda configuration
aws.lambda.get-groups-function-name=${ENVIRONMENT}-os-entitlements-GroupsFunction

aws.environment=${ENVIRONMENT}
aws.parameter.prefix=/osdu/${ENVIRONMENT}
aws.resourcePrefix=${ENVIRONMENT}
aws.region=${AWS_REGION}

REGION=${AWS_REGION}
AUTHORIZE_API=${ENTITLEMENTS_BASE_URL}/api/entitlements/v1
PARTITION_API=${ENTITLEMENTS_BASE_URL}/api/partition/v1
LEGAL_HOSTNAME=notused
CRON_JOB_IP=10.0.0.1
ACCEPT_HTTP=true
        
aws.s3.legal.config.file-name=Legal_COO.json

## AWS SNS configuration
aws.sns.region=${AWS_REGION}

aws.ssm=${SSM_ENABLED}
aws.ssm.prefix=/osdu/${ENVIRONMENT}
aws.legal.sns.topic.arn=${aws.ssm.prefix}/legal/legal-sns-topic-arn

aws.s3.configbucket.ssm.relativePath=${CONFIG_BUCKET_SSM_RELATIVE_PATH:legal/s3DataBucket}
aws.s3.configfilename.ssm.relativePath=${CONFIG_FILE_SSM_RELATIVE_PATH:legal/s3ConfigFileName}
aws.dynamodb.legalTable.ssm.relativePath=${LEGAL_REPOSITORY_SSM_RELATIVE_PATH:legal/legalTable}

server.ssl.enabled=${SSL_ENABLED:true}
server.ssl.key-store-type=PKCS12
server.ssl.key-store=${SSL_KEY_STORE_PATH:/certs/osduonaws.p12}
server.ssl.key-alias=${SSL_KEY_ALIAS:osduonaws}
server.ssl.key-password=${SSL_KEY_PASSWORD:}
server.ssl.key-store-password=${SSL_KEY_STORE_PASSWORD:}