LOG_PREFIX=legal

server.servlet.contextPath=/api/legal/v1/
logging.level.org.springframework.web=DEBUG
server.port=${APPLICATION_PORT}
JAVA_HEAP_OPTS=-Xms${JAVA_HEAP_MEMORY}M -Xmx${JAVA_HEAP_MEMORY}M
JAVA_GC_OPTS=-XX:+UseG1GC -XX:+UseStringDeduplication -XX:InitiatingHeapOccupancyPercent=45


## AWS Lambda configuration
aws.lambda.get-groups-function-name=${ENVIRONMENT}-os-entitlements-GroupsFunction

REGION=${AWS_REGION}
AUTHORIZE_API=notused
LEGAL_HOSTNAME=notused
CRON_JOB_IP=10.0.0.1

## AWS DynamoDB configuration
aws.dynamodb.key=id
aws.dynamodb.table.prefix=${ENVIRONMENT}-
aws.dynamodb.region=${AWS_REGION}
aws.dynamodb.endpoint=dynamodb.${AWS_REGION}.amazonaws.com

## AWS S3 configuration
aws.s3.region=${AWS_REGION}
aws.s3.endpoint=s3.${AWS_REGION}.amazonaws.com
aws.s3.legal.config.bucket-name=${S3_LEGAL_CONFIG_BUCKET}
aws.s3.legal.config.file-name=Legal_COO.json

## AWS SNS configuration
aws.sns.region=${AWS_REGION}
aws.sns.arn=arn:aws:sns:${AWS_REGION}:${AWS_ACCOUNT_ID}:${ENVIRONMENT}-${SNS_TOPIC_NAME}
aws.sns.topic-name=${ENVIRONMENT}-${SNS_TOPIC_NAME}

