LOG_PREFIX=legal

server.servlet.contextPath=/api/legal/v1/
logging.level.org.springframework.web=${LOG_LEVEL}
server.port=${APPLICATION_PORT}

## AWS Lambda configuration
aws.lambda.get-groups-function-name=${ENVIRONMENT}-os-entitlements-GroupsFunction

REGION=${AWS_REGION}
AUTHORIZE_API=${ENTITLEMENTS_BASE_URL}/api/entitlements/v1
LEGAL_HOSTNAME=notused
CRON_JOB_IP=10.0.0.1
ACCEPT_HTTP=true

## AWS DynamoDB configuration
aws.dynamodb.key=id
aws.dynamodb.table.prefix=${ENVIRONMENT}-
aws.dynamodb.region=${AWS_REGION}
aws.dynamodb.endpoint=dynamodb.${AWS_REGION}.amazonaws.com

## AWS S3 configuration
aws.s3.region=${AWS_REGION}
aws.s3.endpoint=s3.${AWS_REGION}.amazonaws.com
aws.s3.legal.config.file-name=Legal_COO.json

## AWS SNS configuration
aws.sns.region=${AWS_REGION}

aws.ssm=${SSM_ENABLED}
aws.ssm.prefix=/osdu/${ENVIRONMENT}
aws.legal.sns.topic.arn=${aws.ssm.prefix}/legal/legal-sns-topic-arn
aws.legal.s3.bucket.name=${aws.ssm.prefix}/legal/legal-s3-bucket-name