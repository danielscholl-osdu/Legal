apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: "{{ .Values.conf.app_name }}"
  name: "{{ .Values.conf.app_name }}"
  namespace: {{ .Release.Namespace }}
spec:
  selector:
    matchLabels:
      app: "{{ .Values.conf.app_name }}"
  replicas: 1
  template:
    metadata:
      labels:
        app: "{{ .Values.conf.app_name }}"
    spec:
      containers:
      - name: "{{ .Values.conf.app_name }}"
        image: "{{ .Values.legal.image }}"
        env:
        - name: "AUTHORIZE_API"
          valueFrom:
            configMapKeyRef:
              key: AUTHORIZE_API
              name: "{{ .Values.conf.configmap }}"
        - name: "LOG_LEVEL"
          valueFrom:
            configMapKeyRef:
              key: LOG_LEVEL
              name: "{{ .Values.conf.configmap }}"
        - name: "ENABLE_FULL_BUCKET_NAME"
          valueFrom:
            configMapKeyRef:
              key: ENABLE_FULL_BUCKET_NAME
              name: "{{ .Values.conf.configmap }}"
        - name: "PROJECT_ID"
          valueFrom:
            configMapKeyRef:
              key: PROJECT_ID
              name: "{{ .Values.conf.configmap }}"
        - name: "AUDIENCES"
          valueFrom:
            configMapKeyRef:
              key: AUDIENCES
              name: "{{ .Values.conf.configmap }}"
        - name: "REDIS_GROUP_HOST"
          valueFrom:
            configMapKeyRef:
              key: REDIS_GROUP_HOST
              name: "{{ .Values.conf.configmap }}"
        - name: "REDIS_STORAGE_HOST"
          valueFrom:
            configMapKeyRef:
              key: REDIS_STORAGE_HOST
              name: "{{ .Values.conf.configmap }}"
        - name: "ACCEPT_HTTP"
          valueFrom:
            configMapKeyRef:
              key: ACCEPT_HTTP
              name: "{{ .Values.conf.configmap }}"
        securityContext:
          allowPrivilegeEscalation: false
          runAsUser: 0
        ports:
        - containerPort: 8080
        resources:
          requests:
            cpu: "{{ .Values.legal.requests_cpu }}"
            memory: "{{ .Values.legal.requests_memory }}"
          limits:
            cpu: "{{ .Values.legal.limits_cpu }}"
            memory: "{{ .Values.legal.limits_memory }}"
      serviceAccountName: "{{ .Values.legal.serviceAccountName }}"
